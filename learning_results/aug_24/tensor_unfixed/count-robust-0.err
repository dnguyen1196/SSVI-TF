_frozen_importlib:222: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
/cluster/home/mnguye16/SSVI/SSVI-TF/Model/TF_Models.py:63: ComplexWarning: Casting complex values to real discards the imaginary part
  self.params[dim][i, 1 : , :] = S_next
/cluster/home/mnguye16/SSVI/SSVI-TF/SSVI/SSVI_TF_interface.py:424: RuntimeWarning: covariance is not symmetric positive-semidefinite.
  vj_sample = np.random.multivariate_normal(mi, Si, size=k)
/cluster/home/mnguye16/SSVI/SSVI-TF/SSVI/SSVI_TF_interface.py:814: RuntimeWarning: covariance is not symmetric positive-semidefinite.
  samples = np.random.multivariate_normal(m, S, size=(self.predict_num_samples))
/cluster/home/mnguye16/SSVI/SSVI-TF/SSVI/SSVI_TF_robust.py:219: RuntimeWarning: covariance is not symmetric positive-semidefinite.
  samples = np.random.multivariate_normal(m, S, size=k)
Traceback (most recent call last):
  File "mini_test.py", line 159, in <module>
    factorizer.factorize(report=args.report, max_iteration=max_iterations, fixed_covariance=fixed_covariance, to_report=[0, 5, 10, 20,  50, 100, 200])
  File "/cluster/home/mnguye16/SSVI/SSVI-TF/SSVI/SSVI_TF_interface.py", line 116, in factorize
    self.update_natural_param_batch(dim, col)
  File "/cluster/home/mnguye16/SSVI/SSVI-TF/SSVI/SSVI_TF_interface.py", line 189, in update_natural_param_batch
    S_next   = self.update_cov_param(dim, i, m, S, di, Di)
  File "/cluster/home/mnguye16/SSVI/SSVI-TF/SSVI/SSVI_TF_interface.py", line 310, in update_cov_param
    w,v = np.linalg.eig(S_next)
  File "/cluster/home/mnguye16/SSVI/SSVI-TF/venv/lib/python3.5/site-packages/numpy/linalg/linalg.py", line 1250, in eig
    _assertFinite(a)
  File "/cluster/home/mnguye16/SSVI/SSVI-TF/venv/lib/python3.5/site-packages/numpy/linalg/linalg.py", line 220, in _assertFinite
    raise LinAlgError("Array must not contain infs or NaNs")
numpy.linalg.linalg.LinAlgError: Array must not contain infs or NaNs
